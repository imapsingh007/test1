trigger:
- main  # This will trigger the pipeline whenever changes are pushed to the main branch

pool:
  vmImage: 'ubuntu-latest'  # Use Ubuntu agent for the build

variables:
  azureSubscription: 'AP-SERVICE CONNECTION'  # Your service connection name
  webAppName: 'AP-WEBAPP'  # Your Azure Web App name (it will be used to deploy the app)
  resourceGroupName: 'AP-RG'  # Your Azure Resource Group name

jobs:
- job: BuildAndDeploy
  displayName: 'Build and Deploy Python App'
  steps:
  
  # Step 1: Checkout the code
  - task: Checkout@1
    displayName: 'Checkout Repository'

  # Step 2: Set up Python environment
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'  # Python version to use (3.x means the latest Python 3 version)
    displayName: 'Set up Python'

  # Step 3: Install dependencies
  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'

  # Step 4: Run tests (Optional but recommended)
  - script: |
      pytest --maxfail=1 --disable-warnings -q
    displayName: 'Run Tests'

  # Step 5: Create a deployable package (e.g., .zip file)
  - script: |
      mkdir -p $(Build.ArtifactStagingDirectory)
      zip -r $(Build.ArtifactStagingDirectory)/app.zip . 
    displayName: 'Create Deployment Package'

  # Step 6: Deploy to Azure Web App
  - task: AzureWebApp@1
    inputs:
      azureSubscription: $(azureSubscription)  # Subscription service connection
      appName: $(webAppName)  # Name of your Azure Web App
      resourceGroupName: $(resourceGroupName)  # Name of your resource group
      package: $(Build.ArtifactStagingDirectory)/app.zip  # Path to deployable package
      deploymentMethod: 'auto'  # Deployment method (auto will handle deployment)
    displayName: 'Deploy to Azure Web App'
